
@import url(http://fonts.googleapis.com/css?family=Open+Sans:700,300);
$yellow: #f1c40f;
$lime: #76c900;
$navy: #0a4069;
$cyan: #57caf4;
$red: #ec008c;
$white: #fefefe;
$gray: #444;
$lightGray: lighten($gray, 30);

$transitionDuration: .3s;
$transition: all $transitionDuration ease-in-out;

body
{
    font-family: 'Open Sans', sans-serif;
    font-size: 16px;
    font-weight: 300;
    line-height: 1em;

    text-align: center;

    color: $gray;
    background: #d0d0d0;
}

section
{
    display: flex;
    justify-content: center;
    flex-direction: column;
    margin-bottom: 2em;
    padding: 0;
    &:last-of-type
    {
        margin-bottom: 0;
    }
    article
    {
        align-self: center;
        width: 20em;
        margin-bottom: 2em;
        p,
        &:last-of-type
        {
            margin-bottom: 0;
        }
    }
}
p
{
    line-height: 1.5em;

    max-width: 20em;
    margin: 1.5em auto 2em;
    padding-bottom: 1.5em;
    span
    {
        display: block;
    }
}


.chart
{
    font-size: 1em;

    perspective: 1000px;
    perspective-origin: 50% 50%;
    backface-visibility: visible;
}

$faceColor: rgba($white, .3);
$growColor: rgba($red, .6);

.bar
{
    font-size: 1em;

    position: relative;

    height: 10em;

    transition: $transition;
    transform: rotateX(60deg) rotateY(0deg);

    transform-style: preserve-3d;

    .face
    {
        font-size: 2em;

        position: relative;

        width: 100%;
        height: 2em;

        background-color: $faceColor;

        &.side-a,
        &.side-b
        {
            width: 2em;
        }
    }
    .side-a
    {
        transform: rotateX(90deg) rotateY(-90deg) translateX(2em) translateY(1em) translateZ(1em);
    }
    .side-b
    {
        transform: rotateX(90deg) rotateY(-90deg) translateX(4em) translateY(1em) translateZ(-1em);
        position: absolute;
        right: 0;
    }
    .side-0
    {
        transform: rotateX(90deg) rotateY(0) translateX(0) translateY(1em) translateZ(-1em);
    }
    .side-1
    {
        transform: rotateX(90deg) rotateY(0) translateX(0) translateY(1em) translateZ(3em);
    }
    .top
    {
        transform: rotateX(0deg) rotateY(0) translateX(0em) translateY(4em) translateZ(2em);
    }
    .floor
    {
        box-shadow: 0 .1em 0.6em rgba(0,0,0,.3), .6em -0.5em 3em rgba(0,0,0,.3), 1em -1em 8em $white;
    }
}

.growing-bar
{
    transition: $transition;
    background-color: $growColor;
    width: 100%;
    height: 2em;
}

@mixin drawSkin($color, $name)
{
    .bar.#{$name}
    {
        .side-a,
        // &.bar-100 .side-b,
        .growing-bar
        {
            background-color: rgba($color, .6);
        }
        .side-0 .growing-bar
        {
            box-shadow: -0.5em -1.5em 4em $color;
        }
        .floor .growing-bar
        {
            box-shadow: 0em 0em 2em $color;
        }
    }
}

@mixin drawFaces($color, $name)
{
    .chart .bar.#{$name} .face
    {
        background-color: rgba($color, .2);
    }
}

@include drawSkin(rgba($yellow, .8), 'yellow');
@include drawSkin(rgba($red, .8), 'red');
@include drawSkin($cyan, 'cyan');
@include drawSkin(rgba($navy, .8), 'navy');
@include drawSkin($lime, 'lime');
@include drawSkin($white, 'white');
@include drawSkin($gray, 'gray');

@include drawFaces(rgba($yellow, .6), 'yellow-face');
@include drawFaces($lime, 'lime-face');
@include drawFaces(rgba($red, .6), 'red-face');
@include drawFaces(rgba($navy, .6), 'navy-face');
@include drawFaces($cyan, 'cyan-face');
@include drawFaces($gray, 'gray-face');
@include drawFaces($lightGray, 'lightGray-face');

@for $i from 0 to 101
{
    .bar-#{$i}
    {
        .growing-bar
        {
            width: percentage($i/100);
        }
    }
}

/*
END // CHART'S RULES
*
*
*/

.actions
{
    display: flex;

    justify-content: center;

    margin-bottom: 0;
    padding-bottom: 2em;
    border-bottom: 1px dotted rgba($gray, .4);
}
label
{
    box-sizing: border-box;
    padding: 1em;
    margin: 0 .2em;

    cursor: pointer;
    transition: all .15s ease-in-out;

    color: $navy;
    border: 1px solid rgba($white, .6);
    border-radius: 0;

    flex: 1;
    &:first-child
    {
        margin-left: 0;

        border-radius: .2em 0 0 .2em;
    }
    &:last-child
    {
        margin-right: 0;

        border-radius: 0 .2em .2em 0;
    }
}


input[id='pos-0']:checked ~ .actions label[for='pos-0'],
input[id='pos-1']:checked ~ .actions label[for='pos-1'],
input[id='pos-2']:checked ~ .actions label[for='pos-2'],
input[id='pos-3']:checked ~ .actions label[for='pos-3']
{
    color: $lime;
    border: 1px solid darken($navy, 15);
    background-color: $navy;
}


input[id='pos-0']:checked ~ .chart
{
    @extend .bar-25;
}
input[id='pos-1']:checked ~ .chart
{
    @extend .bar-50;
}
input[id='pos-2']:checked ~ .chart
{
    @extend .bar-75;
}
input[id='pos-3']:checked ~ .chart
{
    @extend .bar-100;
}
